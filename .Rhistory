# filter only plot centres
filter(stringr::str_detect(Skizzenpunkt, "MB")) %>%
# select only plot ID and name of the refference point
select(MoMoK_Nr, Skizzenpunkt) %>% distinct() %>%
# count number of center points registered for that plot
group_by(MoMoK_Nr)%>%
summarise(n_centres = n()) %>%
filter(n_centres > 1)
# 0.3.1.2.3. LOKATION: hbi lokation momok ----------------------------------------------------
# to calculate the coordinates we have to progress itteratively
# since the structure is the following: we have a reference point (center) with a known geoloc
# then there is one or more points of the same plot that are measured based on that ref point
# so their coordinates depend on joining in the corect ref point.
# then there will be points who´s ref point is not the ref point itself but another coordinate
# like corner or so
# these coordinates can only be calculated AFTER the ref-point(center)-to-direkt-ref-point-dependent-points is calcualted
# thus we will repeat the process as often as the max number of ref points (center) per plot,
# which is: 6
max(lokation_momok %>% select(MoMoK_Nr, Ursprung) %>% distinct() %>% group_by(MoMoK_Nr) %>% summarise(n_refpoints = n()) %>% pull(n_refpoints))
# 0.3.1.2.3.1.  prepare lokation -----------------------------------------------------------------------------------
# correct lokation ursprung and skizzenpunkt
lokation_momok <- lokation_momok %>%
# if there is no skizzenpunkt (name of the point in question) look at the notes column
mutate(Skizzenpunkt = case_when(is.na(Skizzenpunkt) & str_detect(Erläuterung, "Referenzpunkt") ~ "RP",
is.na(Skizzenpunkt) & str_detect(Erläuterung, "Mittelpunkt") ~ "MB",
is.na(Skizzenpunkt) & str_detect(Erläuterung, "Eckpunkt") ~ str_sub(Erläuterung, start= 9),
TRUE ~ Skizzenpunkt)) %>%
# harmonize abbreviations used in reference point column and point name column
mutate(Ursprung = case_when(str_detect(Ursprung, "RP") ~ "RP",
str_detect(Ursprung, "1") | str_detect(Ursprung, "2") ~ paste0("MB", Ursprung),
str_detect(Ursprung, "MB") & !(str_detect(Ursprung, "1") & !(str_detect(Ursprung, "2")))~ "MB",
str_detect(Ursprung, "ESO")~ "SE",
startsWith(Ursprung, "E") ~ str_sub(Ursprung, start = -2),
is.na(Ursprung) ~ "RP",
TRUE ~ Ursprung))
# 0.3.1.2.3.2.  calculate coordinates -----------------------------------------------------------------------------------
# punkt includes followong columns:
# bund_nr ld ld_bze ld_wze bwi_tnr bwi_eck eu_wze srid_ist   istre   istho raster_8x8 raster_16x16 raster hoehenn
# lokation Hbi contains: bfhnr  rw_med  hw_med
# iteration 1
vm_lokation_momok_1 <- lokation_momok %>%
# join in the the respective reference point coordinates  for the center of the forest inventory by "ursprung"
left_join(., lokation_momok %>% select( "MoMoK_Nr",  "Skizzenpunkt",  "Dezimalgrad.N..WGS84.", "Dezimalgrad.E..WGS84.") %>%
rename("ref_northing" = "Dezimalgrad.N..WGS84.") %>%
rename("ref_easting" = "Dezimalgrad.E..WGS84."),
by = c("MoMoK_Nr", "Ursprung" = "Skizzenpunkt")) %>%
mutate(across(c("Dezimalgrad.E..WGS84.", "Dezimalgrad.N..WGS84.", "ref_northing", "ref_easting", "Distanz..m.", "Azimut..gon."), as.numeric)) %>%
# calcualte coordiantes of mb based on utm coordinates of RP (referenzpoint)
# as the center of the forest inventory is not the center of the forest inventory
mutate(rw_med = ifelse(is.na(Dezimalgrad.E..WGS84.), coord(ref_easting,  ref_northing, Distanz..m., Azimut..gon., coordinate = "x"), Dezimalgrad.E..WGS84.), # x, easting, longitude, RW
hw_med = ifelse(is.na(Dezimalgrad.N..WGS84.), coord(ref_easting,  ref_northing, Distanz..m., Azimut..gon., coordinate = "y"), Dezimalgrad.N..WGS84.) # y, northing, latitude, HW
)
# iteration 2
vm_lokation_momok_2 <- vm_lokation_momok_1 %>%
# join in the the respective reference point coordinates  for the center of the forest inventory by "ursprung"
left_join(., vm_lokation_momok_1 %>% select( "MoMoK_Nr",  "Skizzenpunkt",  "hw_med", "rw_med") %>%
rename("ref_northing_1" = "hw_med") %>%
rename("ref_easting_1" = "rw_med"),
by = c("MoMoK_Nr", "Ursprung" = "Skizzenpunkt")) %>%
mutate(across(c("Dezimalgrad.E..WGS84.", "Dezimalgrad.N..WGS84.", "ref_northing_1", "ref_easting_1", "Distanz..m.", "Azimut..gon."), as.numeric)) %>%
# calcualte coordiantes of mb based on utm coordinates of RP (referenzpoint)
# as the center of the forest inventory is not the center of the forest inventory
mutate(rw_med = ifelse(is.na(Dezimalgrad.E..WGS84.) & is.na(rw_med) , coord(ref_easting_1,  ref_northing_1, Distanz..m., Azimut..gon., coordinate = "x"), rw_med), # x, easting, longitude, RW
hw_med = ifelse(is.na(Dezimalgrad.N..WGS84.) & is.na(hw_med), coord(ref_easting_1,  ref_northing_1, Distanz..m., Azimut..gon., coordinate = "y"), hw_med) # y, northing, latitude, HW
)
# iteration 3
vm_lokation_momok_3 <- vm_lokation_momok_2 %>%
# join in the the respective reference point coordinates  for the center of the forest inventory by "ursprung"
left_join(., vm_lokation_momok_2 %>% select( "MoMoK_Nr",  "Skizzenpunkt",   "hw_med", "rw_med") %>%
rename("ref_northing_2" = "hw_med") %>%
rename("ref_easting_2" = "rw_med"),
by = c("MoMoK_Nr", "Ursprung" = "Skizzenpunkt")) %>%
mutate(across(c("Dezimalgrad.E..WGS84.", "Dezimalgrad.N..WGS84.", "ref_northing_2", "ref_easting_2", "Distanz..m.", "Azimut..gon."), as.numeric)) %>%
# calcualte coordiantes of mb based on utm coordinates of RP (referenzpoint)
# as the center of the forest inventory is not the center of the forest inventory
mutate(rw_med = ifelse(is.na(Dezimalgrad.E..WGS84.) & is.na(rw_med) , coord(ref_easting_2,  ref_northing_2, Distanz..m., Azimut..gon., coordinate = "x"), rw_med), # x, easting, longitude, RW
hw_med = ifelse(is.na(Dezimalgrad.N..WGS84.) & is.na(hw_med), coord(ref_easting_2,  ref_northing_2, Distanz..m., Azimut..gon., coordinate = "y"), hw_med) # y, northing, latitude, HW
)
# iteration 4
vm_lokation_momok_4 <- vm_lokation_momok_3 %>%
# join in the the respective reference point coordinates  for the center of the forest inventory by "ursprung"
left_join(., vm_lokation_momok_3 %>% select( "MoMoK_Nr",  "Skizzenpunkt",   "hw_med", "rw_med") %>%
rename("ref_northing_3" = "hw_med") %>%
rename("ref_easting_3" = "rw_med"),
by = c("MoMoK_Nr", "Ursprung" = "Skizzenpunkt")) %>%
mutate(across(c("Dezimalgrad.E..WGS84.", "Dezimalgrad.N..WGS84.", "ref_northing_3", "ref_easting_3", "Distanz..m.", "Azimut..gon."), as.numeric)) %>%
# calcualte coordiantes of mb based on utm coordinates of RP (referenzpoint)
# as the center of the forest inventory is not the center of the forest inventory
mutate(rw_med = ifelse(is.na(Dezimalgrad.E..WGS84.) & is.na(rw_med) , coord(ref_easting_3,  ref_northing_3, Distanz..m., Azimut..gon., coordinate = "x"), rw_med), # x, easting, longitude, RW
hw_med = ifelse(is.na(Dezimalgrad.N..WGS84.) & is.na(hw_med), coord(ref_easting_3,  ref_northing_3, Distanz..m., Azimut..gon., coordinate = "y"), hw_med) # y, northing, latitude, HW
)
# iteration 5
vm_lokation_momok_5 <- vm_lokation_momok_4 %>%
# join in the the respective reference point coordinates  for the center of the forest inventory by "ursprung"
left_join(., vm_lokation_momok_4 %>% select( "MoMoK_Nr",  "Skizzenpunkt",   "hw_med", "rw_med") %>%
rename("ref_northing_4" = "hw_med") %>%
rename("ref_easting_4" = "rw_med"),
by = c("MoMoK_Nr", "Ursprung" = "Skizzenpunkt")) %>%
mutate(across(c("Dezimalgrad.E..WGS84.", "Dezimalgrad.N..WGS84.", "ref_northing_4", "ref_easting_4", "Distanz..m.", "Azimut..gon."), as.numeric)) %>%
# calcualte coordiantes of mb based on utm coordinates of RP (referenzpoint)
# as the center of the forest inventory is not the center of the forest inventory
mutate(rw_med = ifelse(is.na(Dezimalgrad.E..WGS84.) & is.na(rw_med) , coord(ref_easting_4,  ref_northing_4, Distanz..m., Azimut..gon., coordinate = "x"), rw_med), # x, easting, longitude, RW
hw_med = ifelse(is.na(Dezimalgrad.N..WGS84.) & is.na(hw_med), coord(ref_easting_4,  ref_northing_4, Distanz..m., Azimut..gon., coordinate = "y"), hw_med) # y, northing, latitude, HW
)
vm_lokation_momok_5
vm_lokation_momok_5 %>%
# join in the the respective reference point coordinates  for the center of the forest inventory by "ursprung"
left_join(., lokation_momok %>%
filter(Skizzenpunkt == "RP") %>%
select( "MoMoK_Nr", "Dezimalgrad.N..WGS84.", "Dezimalgrad.E..WGS84.") %>%
rename("ref_northing_5" = "Dezimalgrad.N..WGS84.") %>%  # y, northing, latitude, HW
rename("ref_easting_5" = "Dezimalgrad.E..WGS84.")   # x, easting, longitude, RW
, by = c("MoMoK_Nr")) %>%
mutate(across(c("ref_northing_5", "ref_easting_5"), as.numeric))
# calcualte coordiantes of mb based on utm coordinates of RP (referenzpoint)
# as the center of the forest inventory is not the center of the forest inventory
mutate(rw_med = ifelse(is.na(Dezimalgrad.E..WGS84.) & is.na(rw_med), ref_easting_5, rw_med), # x, easting, longitude, RW
hw_med = ifelse(is.na(Dezimalgrad.N..WGS84.) & is.na(hw_med), ref_northing_5, hw_med) # y, northing, latitude, HW
)
vm_lokation_momok_5 %>%
# join in the the respective reference point coordinates  for the center of the forest inventory by "ursprung"
left_join(., lokation_momok %>%
filter(Skizzenpunkt == "RP") %>%
select( "MoMoK_Nr", "Dezimalgrad.N..WGS84.", "Dezimalgrad.E..WGS84.") %>%
rename("ref_northing_5" = "Dezimalgrad.N..WGS84.") %>%  # y, northing, latitude, HW
rename("ref_easting_5" = "Dezimalgrad.E..WGS84.")   # x, easting, longitude, RW
, by = c("MoMoK_Nr")) %>%
mutate(across(c("ref_northing_5", "ref_easting_5"), as.numeric)) %>%
# calcualte coordiantes of mb based on utm coordinates of RP (referenzpoint)
# as the center of the forest inventory is not the center of the forest inventory
mutate(rw_med = ifelse(is.na(Dezimalgrad.E..WGS84.) & is.na(rw_med), ref_easting_5, rw_med), # x, easting, longitude, RW
hw_med = ifelse(is.na(Dezimalgrad.N..WGS84.) & is.na(hw_med), ref_northing_5, hw_med) # y, northing, latitude, HW
)
vm_lokation_momok_5 %>%
# join in the the respective reference point coordinates  for the center of the forest inventory by "ursprung"
left_join(., lokation_momok %>%
filter(Skizzenpunkt == "RP") %>%
select( "MoMoK_Nr", "Dezimalgrad.N..WGS84.", "Dezimalgrad.E..WGS84.") %>%
rename("ref_northing_5" = "Dezimalgrad.N..WGS84.") %>%  # y, northing, latitude, HW
rename("ref_easting_5" = "Dezimalgrad.E..WGS84.")   # x, easting, longitude, RW
, by = c("MoMoK_Nr")) %>%
mutate(across(c("Dezimalgrad.E..WGS84.", "Dezimalgrad.N..WGS84.", "ref_northing_5", "ref_easting_5", "Distanz..m.", "Azimut..gon."), as.numeric)) %>%
# calcualte coordiantes of mb based on utm coordinates of RP (referenzpoint)
# as the center of the forest inventory is not the center of the forest inventory
mutate(rw_med = ifelse(is.na(Dezimalgrad.E..WGS84.) & is.na(rw_med), ref_easting_5, rw_med), # x, easting, longitude, RW
hw_med = ifelse(is.na(Dezimalgrad.N..WGS84.) & is.na(hw_med), ref_northing_5, hw_med) # y, northing, latitude, HW
)
colSums(is.na(vm_lokation_momok_6))
# if you can´t calculate the center of the stand inventoryy, just fill in the reference poitn coordinates as stand inventory centrer
vm_lokation_momok_6 <- vm_lokation_momok_5 %>%
# join in the the respective reference point coordinates  for the center of the forest inventory by "ursprung"
left_join(., lokation_momok %>%
filter(Skizzenpunkt == "RP") %>%
select( "MoMoK_Nr", "Dezimalgrad.N..WGS84.", "Dezimalgrad.E..WGS84.") %>%
rename("ref_northing_5" = "Dezimalgrad.N..WGS84.") %>%  # y, northing, latitude, HW
rename("ref_easting_5" = "Dezimalgrad.E..WGS84.")   # x, easting, longitude, RW
, by = c("MoMoK_Nr")) %>%
mutate(across(c("Dezimalgrad.E..WGS84.", "Dezimalgrad.N..WGS84.", "ref_northing_5", "ref_easting_5", "Distanz..m.", "Azimut..gon."), as.numeric)) %>%
# calcualte coordiantes of mb based on utm coordinates of RP (referenzpoint)
# as the center of the forest inventory is not the center of the forest inventory
mutate(rw_med = ifelse(is.na(Dezimalgrad.E..WGS84.) & is.na(rw_med), ref_easting_5, rw_med), # x, easting, longitude, RW
hw_med = ifelse(is.na(Dezimalgrad.N..WGS84.) & is.na(hw_med), ref_northing_5, hw_med) # y, northing, latitude, HW
)
colSums(is.na(vm_lokation_momok_6))
# 0.3.1.2.3.3.  export lokation -----------------------------------------------------------------------------------
# adjust plot Id according to double sampled plots
vm_lokation_momok <- vm_lokation_momok_6 %>%
# filter only plot centres
filter(stringr::str_detect(Skizzenpunkt, "MB")) %>%
mutate(  MoMoK_Nr = ifelse(
# idenfity plots with more then one center that have a more then 2 characters long Skizzenpunkt name,
MoMoK_Nr %in% double_plots_momok & nchar(Skizzenpunkt) > 2,
# add number of Skizzenpunkt to plot ID (https://stackoverflow.com/questions/7963898/extracting-the-last-n-characters-from-a-string-in-r)
paste0(MoMoK_Nr, str_sub(Skizzenpunkt, start= -1)),
# otherwise leave old plot number
MoMoK_Nr)) %>%
rename("bfhnr" = "MoMoK_Nr") %>%
select(bfhnr, rw_med, hw_med) %>%
distinct()
write.csv(vm_lokation_momok, paste0(input.path, "momok_vm_lokation", ".csv"), row.names = FALSE)
be_momok <- read.delim(file = here(paste0(input.path, "info_momok.csv")), sep = ",", dec = ".")
be_momok <- be_momok %>%
select("MoMoK_Nr",                  # "bund_nr"
"Datum_Aufnahme",            #"datum"
"Betriebsart" ,              #"beart"
"Bestockungstyp",            #"besttyp"
"Vertikalstruktur",          #"struktur"
"Kronen.SG1..Hauptbestand.", # "schlussgrad_schi1"
"Kronen.SG2..Unterstand.",    #"schlussgrad_schi2"
"Mischungsform"              #"mischung"
) %>%  # close select
# add columns that are in be but not in momok_be
mutate(team = -9,
hbi_status = -9, # i set this to -9 so it fits the structure of bze (nsi)
pk1_aufnahme = 3, # for pk1 and pk2 (concentric cirlce sampling cirlce 1 and 2 ) we put stus 1 as the circle for momok was 12m ans all trees were assessed within these 12m
pk2_aufnahme = 1, # 1 Aufnahme wurde erfolgreich durchgeführt
pk3_aufnahme = 3,
geraet = -9,
beschreibungbestockung = -9,
anmerkung = NA) %>%
distinct()
colnames(be_momok) <- c("bund_nr","datum" ,"beart" ,"besttyp","struktur" ,"schlussgrad_schi1","schlussgrad_schi2","mischung",
# not in momok be yet
"team", "hbi_status", "pk1_aufnahme","pk2_aufnahme","pk3_aufnahme", "geraet", "beschreibungbestockung", "anmerkung")
if(isTRUE(nrow(double_plots_momok) != 0) == T){
be_momok_double_plots_list <- vector("list", length = nrow(double_plots_momok))
for (i in 1:nrow(double_plots_momok)) {
# i = 1
my.plot.id = as.numeric(double_plots_momok[i, "MoMoK_Nr"])
# select number of centres of the double plot
n.rep <- as.numeric(double_plots_momok[i, "n_centres"])-1   # - 1 because one is already in the original dataset
# select the rows form be_momok that have to be doublicated
my.be.row.to.rep <- be_momok[be_momok$bund_nr == my.plot.id, ]
# repeat the row as often as the plot has centres: https://stackoverflow.com/questions/11121385/repeat-rows-of-a-data-frame
my.be.row.to.rep <- my.be.row.to.rep[rep(seq_len(nrow(my.be.row.to.rep)), each = n.rep), ] %>%
mutate(bund_nr = paste0(bund_nr, row_number()))
# save to export
be_momok_double_plots_list[[i]] <- my.be.row.to.rep
}
be_momok_double_plots <- as.data.frame(rbindlist(be_momok_double_plots_list))
# bind doublicated rows into be_momok if they excist
be_momok <- rbind(be_momok, be_momok_double_plots) %>% arrange(bund_nr)
}
write.csv(be_momok, paste0(input.path, "momok_be.csv"), row.names = FALSE)
# 0.3.1.2.4.2. beab momok ----------------------------------------------------
# beab hbi includes followong columns:
# [1] "bund_nr"       "lfd_nr"        "baumkennzahl"  "zwiesel"       "bart"          "alter"         "alter_methode" "d_mess"        "bhd_hoehe"     "hoehe"         "kransatz"      "azi"
# [13] "hori"          "kraft"         "schi"
beab_momok <- read.delim(file = here(paste0(input.path, "beab_momok.csv")), sep = ",", dec = ".") %>% filter(!(is.na(MoMoK_Nr)))
colnames(beab_momok)
# [1] "MoMoK_Nr"          "Name"              "Bundeland"         "Datum_Aufnahme"    "Nr_PK"             "BNr"               "ZW"                "St"                "Baumart..Code."
# [10] "Baumart"           "Schi"              "Kraft"             "Alt"               "Alt.Meth"          "BHD..mm."          "BHD.Hoehe..cm."    "Permanent.Maßband" "Punktdendrometer"
# [19] "BHD.Stufen"        "Hoehe..dm."        "Kronenansatz..dm." "Distanz..cm."      "Azimut..Gon."      "Azimut...."        "Bemerkung"
beab_momok <- beab_momok %>%
mutate(MoMoK_Nr = ifelse(
# idenfity plots with more then one center that have a number in their sampling circuit number,
MoMoK_Nr %in% double_plots_momok & !is.na(as.numeric(Nr_PK)),
# add number of Skizzenpunkt to plot ID (https://stackoverflow.com/questions/7963898/extracting-the-last-n-characters-from-a-string-in-r)
paste0(MoMoK_Nr, Nr_PK),
# otherwise leave old plot number
MoMoK_Nr)) %>%
mutate(across(c("BHD..mm.", "Distanz..cm.",      "Azimut..Gon.",      "Azimut...."), as.numeric)) %>%
mutate(Azimut..Gon. = ifelse(is.na(Azimut..Gon.), (Azimut..../360)*400 , Azimut..Gon.)) %>%
select("MoMoK_Nr"                # "bund_nr"
,"BNr"                     #lfd_nr
,  "ZW"                   # "zwiesel"
, "Baumart"               # "bart"
, "Alt"                   # "alter"
,  "Alt.Meth"             # "alter_methode"
, "BHD..mm."              # "d_mess"
, "BHD.Hoehe..cm."        # "bhd_hoehe"
,  "Hoehe..dm."           # "hoehe"
, "Kronenansatz..dm."     # "kransatz"
,  "Azimut..Gon."         #  "azi"
, "Distanz..cm."          # hori
, "Kraft"                # kraft
, "Schi"                 # schi
)  %>% distinct() %>%
# there were different trees with the same tree id so we have to reassing the three IDs this cannot happen in BZE data since we have a plausi check for them
group_by(MoMoK_Nr) %>% mutate(BNr = row_number() )
# assign new colnames corresponding with bze
colnames(beab_momok) <- c("bund_nr", "lfd_nr", "zwiesel","bart", "alter", "alter_methode", "d_mess",  "bhd_hoehe" , "hoehe", "kransatz",  "azi", "hori", "kraft", "schi")
# export
write.csv(beab_momok, paste0(input.path, "momok_beab.csv"), row.names = FALSE)
# 0.3.1.2.5 TITLE momok tit csv ----------------------------------------------------
# tit includes followong columns:
# "bund_nr"    "team"       "datum"      "status"     "re_form"    "re_lage"    "neigung"    "exposition" "anmerkung"
tit_momok <- lokation_momok %>%
filter(stringr::str_detect(Skizzenpunkt, "MB")) %>%
mutate(  MoMoK_Nr = ifelse(
# idenfity plots with more then one center that have a more then 2 characters long Skizzenpunkt name,
MoMoK_Nr %in% double_plots_momok & nchar(Skizzenpunkt) > 2,
# add number of Skizzenpunkt to plot ID (https://stackoverflow.com/questions/7963898/extracting-the-last-n-characters-from-a-string-in-r)
paste0(MoMoK_Nr, str_sub(Skizzenpunkt, start= -1)),
# otherwise leave old plot number
MoMoK_Nr)) %>% # only select the points that mark the center of the forest inventory
select("MoMoK_Nr",                  # "bund_nr"
"Erläuterung"  ) %>%  # anmerkung
# add columns that are in be but not in momok_be
left_join(., be_momok %>% select(bund_nr, datum) %>% mutate(bund_nr = as.character(bund_nr)), by = c("MoMoK_Nr" = "bund_nr")) %>%
mutate(team = -9,       # "team"
status = -9, # i set this to -9 so it fits the structure of bze (nsi)
re_form = -9,
re_lage = -9,
neigung = -9,
exposition = -9) %>%
distinct()
# assign colnames<
colnames(tit_momok) <- c("bund_nr", "anmerkung", "datum",
# not in momok be yet
"team" ,  "status",     "re_form",    "re_lage",    "neigung" ,   "exposition")
write.csv(tit_momok, paste0(input.path, "momok_tit.csv"), row.names = FALSE)
# 0.3.1.2.6. REGENERATION momok ----------------------------------------------------
RG_momok <- read.delim(file = here(paste0(input.path, "bej_momok.csv")), sep = ",", dec = ".") %>% filter(!(is.na(MoMoK_Nr)))
RG_momok <- RG_momok %>%
# join in dataset that contains info about the centre the RG circuit was taken from
left_join(., RG_momok%>%
select("MoMoK_Nr", "Lage", "pk_maxdist..cm.") %>%
distinct() %>%
group_by(MoMoK_Nr, Lage) %>% mutate(pk_nr_double_plots = ifelse(MoMoK_Nr %in% c(double_plots_momok$MoMoK_Nr), row_number(), NA)),
by = c("MoMoK_Nr", "Lage", "pk_maxdist..cm.")) %>%
# adjust plot_ID for double plots:
mutate(MoMoK_Nr = ifelse(
# idenfity plots with more then one center that have a number in their sampling circuit number,
(MoMoK_Nr) %in% c(double_plots_momok$MoMoK_Nr) & !is.na(as.numeric(pk_nr_double_plots)),
# add number of Skizzenpunkt to plot ID (https://stackoverflow.com/questions/7963898/extracting-the-last-n-characters-from-a-string-in-r)
paste0(MoMoK_Nr, pk_nr_double_plots),
# otherwise leave old plot number
as.character(MoMoK_Nr))) %>%
select(-c(pk_nr_double_plots))
# 0.3.1.2.6.1. bej momok ----------------------------------------------------
# bej hbi includes followong columns:
# "bund_nr"      "pk_nr"        "pk_aufnahme"  "pk_richtung"  "pk_dist"      "pk_maxdist"   "pk_anmerkung"
colnames(RG_momok)
bej_momok <- RG_momok %>%
select("MoMoK_Nr"                # "bund_nr"
,"Nr_VJ_PK"               #pk_nr
# "pk_aufnahme" missing
, "Lage"                   # "pk_richtung"
, "Distanz.MB..cm."        # "pk_dist"
, "pk_maxdist..cm."        # "pk_maxdist"
)  %>%
mutate(pk_aufnahme = 1, # regenation assesment was successfully completed (as we dont have any other info)
pk_anmerkung = NA) %>%
distinct() %>%
# assign consequitve number to sampling circuits
group_by(MoMoK_Nr) %>% arrange(MoMoK_Nr , Lage  , pk_maxdist..cm.) %>% mutate(Nr_VJ_PK = row_number() )
# assign new colnames
colnames(bej_momok) <- c("bund_nr",  "pk_nr",  "pk_richtung",  "pk_dist", "pk_maxdist" ,    "pk_aufnahme",  "pk_anmerkung")
write.csv(bej_momok, paste0(input.path, "momok_bej.csv"), row.names = FALSE)
# 0.3.1.2.6.2. bejb momok ----------------------------------------------------
# bej hbi includes followong columns:
# "bund_nr"  "pk_nr"    "lfd_nr"   "bart"     "hoehe"    "grklasse"
colnames(RG_momok)
bejb_momok <- RG_momok %>%
select("MoMoK_Nr"                # "bund_nr"
, "Lage"
,"Nr_VJ_PK"               #pk_nr
, "pk_maxdist..cm."       # we need this to join in the correct pk number
, "LfdNr"                 # "lfd_nr"
,"Baumart"         # "bart"
,"Hoehe..cm."             # "hoehe"
,"grklasse"               # "grklasse"
) %>% distinct() %>%
group_by(MoMoK_Nr, Lage, pk_maxdist..cm.) %>% mutate(LfdNr = row_number() ) %>%
# join in correct RG sampling circuit number from bej
left_join(., bej_momok %>% select(bund_nr, pk_nr, pk_richtung, pk_maxdist), by = c(c("MoMoK_Nr" = "bund_nr"), c("Lage" = "pk_richtung"), c("pk_maxdist..cm."  = "pk_maxdist" ))) %>%
# change Nr_VJ_PK to numbers from pk_nr column from bej_momok:
mutate(Nr_VJ_PK = ifelse(is.na(as.numeric(Nr_VJ_PK)), pk_nr, Nr_VJ_PK)) %>%
ungroup() %>%
select(-c("pk_maxdist..cm.", "pk_nr", "Lage"))
# assign new colnames
colnames(bejb_momok) <- c("bund_nr",  "pk_nr",    "lfd_nr" ,  "bart",     "hoehe",    "grklasse")
# export
write.csv(bejb_momok, paste0(input.path, "momok_bejb.csv"), row.names = FALSE)
bejb_momok
RG_momok
# 0.3.1.2.6.1. bej momok ----------------------------------------------------
# bej hbi includes followong columns:
# "bund_nr"      "pk_nr"        "pk_aufnahme"  "pk_richtung"  "pk_dist"      "pk_maxdist"   "pk_anmerkung"
colnames(RG_momok)
bej_momok <- RG_momok %>%
select("MoMoK_Nr"                # "bund_nr"
,"Nr_VJ_PK"               #pk_nr
# "pk_aufnahme" missing
, "Lage"                   # "pk_richtung"
, "Distanz.MB..cm."        # "pk_dist"
, "pk_maxdist..cm."        # "pk_maxdist"
)  %>%
mutate(pk_aufnahme = 1, # regenation assesment was successfully completed (as we dont have any other info)
pk_anmerkung = NA) %>%
distinct() %>%
# assign consequitve number to sampling circuits
group_by(MoMoK_Nr) %>% arrange(MoMoK_Nr , Lage  , pk_maxdist..cm.) %>% mutate(Nr_VJ_PK = row_number() )
# assign new colnames
colnames(bej_momok) <- c("bund_nr",  "pk_nr",  "pk_richtung",  "pk_dist", "pk_maxdist" ,    "pk_aufnahme",  "pk_anmerkung")
write.csv(bej_momok, paste0(input.path, "momok_bej.csv"), row.names = FALSE)
# 0.3.1.2.6.2. bejb momok ----------------------------------------------------
# bej hbi includes followong columns:
# "bund_nr"  "pk_nr"    "lfd_nr"   "bart"     "hoehe"    "grklasse"
colnames(RG_momok)
bejb_momok <- RG_momok %>%
select("MoMoK_Nr"                # "bund_nr"
, "Lage"
,"Nr_VJ_PK"               #pk_nr
, "pk_maxdist..cm."       # we need this to join in the correct pk number
, "LfdNr"                 # "lfd_nr"
,"Baumart"         # "bart"
,"Hoehe..cm."             # "hoehe"
,"grklasse"               # "grklasse"
) %>% distinct() %>%
group_by(MoMoK_Nr, Lage, pk_maxdist..cm.) %>% mutate(LfdNr = row_number() ) %>%
# join in correct RG sampling circuit number from bej
left_join(., bej_momok %>% select(bund_nr, pk_nr, pk_richtung, pk_maxdist), by = c(c("MoMoK_Nr" = "bund_nr"), c("Lage" = "pk_richtung"), c("pk_maxdist..cm."  = "pk_maxdist" ))) %>%
# change Nr_VJ_PK to numbers from pk_nr column from bej_momok:
mutate(Nr_VJ_PK = ifelse(is.na(as.numeric(Nr_VJ_PK)), pk_nr, Nr_VJ_PK)) %>%
ungroup() %>%
select(-c("pk_maxdist..cm.", "pk_nr", "Lage"))
bej_momok %>% filter(is.na(Nr_VJ_PK ))
bej_momok <- RG_momok %>%
select("MoMoK_Nr"                # "bund_nr"
,"Nr_VJ_PK"               #pk_nr
# "pk_aufnahme" missing
, "Lage"                   # "pk_richtung"
, "Distanz.MB..cm."        # "pk_dist"
, "pk_maxdist..cm."        # "pk_maxdist"
)  %>%
mutate(pk_aufnahme = 1, # regenation assesment was successfully completed (as we dont have any other info)
pk_anmerkung = NA) %>%
distinct() %>%
# assign consequitve number to sampling circuits
group_by(MoMoK_Nr) %>% arrange(MoMoK_Nr , Lage  , pk_maxdist..cm.) %>% mutate(Nr_VJ_PK = row_number() )
# assign new colnames
colnames(bej_momok) <- c("bund_nr",  "pk_nr",  "pk_richtung",  "pk_dist", "pk_maxdist" ,    "pk_aufnahme",  "pk_anmerkung")
write.csv(bej_momok, paste0(input.path, "momok_bej.csv"), row.names = FALSE)
# 0.3.1.2.6.2. bejb momok ----------------------------------------------------
# bej hbi includes followong columns:
# "bund_nr"  "pk_nr"    "lfd_nr"   "bart"     "hoehe"    "grklasse"
colnames(RG_momok)
bejb_momok <- RG_momok %>%
select("MoMoK_Nr"                # "bund_nr"
, "Lage"
,"Nr_VJ_PK"               #pk_nr
, "pk_maxdist..cm."       # we need this to join in the correct pk number
, "LfdNr"                 # "lfd_nr"
,"Baumart"         # "bart"
,"Hoehe..cm."             # "hoehe"
,"grklasse"               # "grklasse"
) %>% distinct() %>%
group_by(MoMoK_Nr, Lage, pk_maxdist..cm.) %>% mutate(LfdNr = row_number() ) %>%
# join in correct RG sampling circuit number from bej
left_join(., bej_momok %>% select(bund_nr, pk_nr, pk_richtung, pk_maxdist), by = c(c("MoMoK_Nr" = "bund_nr"), c("Lage" = "pk_richtung"), c("pk_maxdist..cm."  = "pk_maxdist" ))) %>%
# change Nr_VJ_PK to numbers from pk_nr column from bej_momok:
mutate(Nr_VJ_PK = ifelse(is.na(as.numeric(Nr_VJ_PK)), pk_nr, Nr_VJ_PK)) %>%
ungroup() %>%
select(-c("pk_maxdist..cm.", "pk_nr", "Lage"))
bejb_momok %>% filter(is.na(Nr_VJ_PK))
bejb_momok %>% filter(is.na(MoMoK_Nr))
bejb_momok <- RG_momok %>%
select("MoMoK_Nr"                # "bund_nr"
, "Lage"
,"Nr_VJ_PK"               #pk_nr
, "pk_maxdist..cm."       # we need this to join in the correct pk number
, "LfdNr"                 # "lfd_nr"
,"Baumart"         # "bart"
,"Hoehe..cm."             # "hoehe"
,"grklasse"               # "grklasse"
) %>% distinct() %>%
group_by(MoMoK_Nr, Lage, pk_maxdist..cm.) %>% mutate(LfdNr = row_number() ) %>%
# join in correct RG sampling circuit number from bej
left_join(., bej_momok %>% select(bund_nr, pk_nr, pk_richtung, pk_maxdist), by = c(c("MoMoK_Nr" = "bund_nr"), c("Lage" = "pk_richtung"), c("pk_maxdist..cm."  = "pk_maxdist" ))) %>%
# change Nr_VJ_PK to numbers from pk_nr column from bej_momok:
mutate(Nr_VJ_PK = ifelse(is.na(as.numeric(Nr_VJ_PK)), pk_nr, Nr_VJ_PK)) %>%
ungroup() %>%
select(-c("pk_maxdist..cm.", "pk_nr", "Lage"))
# assign new colnames
colnames(bejb_momok) <- c("bund_nr",  "pk_nr",    "lfd_nr" ,  "bart",     "hoehe",    "grklasse")
# export
write.csv(bejb_momok, paste0(input.path, "momok_bejb.csv"), row.names = FALSE)
# 0.3.1.2.7.DEADWOOD MOMOK ----------------------------------------------------
DW_momok <- read.delim(file = here(paste0(input.path, "be_totholz_momok.csv")), sep = ",", dec = ".") %>% filter(!(is.na(MoMoK_Nr)))
colnames(DW_momok)
# 0.3.1.2.7.1. be_totholz_punkt momok ----------------------------------------------------
# be_totholz_punkt hbi includes followong columns:
# "bund_nr" "status"  "pk_dist" "pk_azi"
be_totholz_punkt_momok <- DW_momok %>%
# adjust Momok nr. if the plot is doublicated
mutate(MoMoK_Nr = ifelse(
# idenfity plots with more then one center that have a number in their sampling circuit number,
MoMoK_Nr %in% double_plots_momok & !is.na(as.numeric(Nr_PK)),
# add number of Skizzenpunkt to plot ID (https://stackoverflow.com/questions/7963898/extracting-the-last-n-characters-from-a-string-in-r)
paste0(MoMoK_Nr, Nr_PK),
# otherwise leave old plot number
MoMoK_Nr)) %>%
select("MoMoK_Nr"                # "bund_nr"
) %>%
mutate(status = 1,
pk_dist = -9,
pk_azi = -9) %>%
rename("bund_nr" = "MoMoK_Nr") %>%
distinct()
write.csv(be_totholz_punkt_momok, paste0(input.path, "momok_be_totholz_punkt.csv"), row.names = FALSE)
# 0.3.1.2.7.2. be_totholz_liste momok ----------------------------------------------------
# be_totholz_liste hbi includes followong columns:
# "bund_nr"     "lfd_nr"      "typ"         "baumgruppe"  "anzahl"      "durchmesser" "laenge"      "zersetzung"
be_totholz_liste_momok <- DW_momok %>%
# adjust Momok nr. if the plot is doublicated
mutate(MoMoK_Nr = ifelse(
# idenfity plots with more then one center that have a number in their sampling circuit number,
MoMoK_Nr %in% double_plots_momok & !is.na(as.numeric(Nr_PK)),
# add number of Skizzenpunkt to plot ID (https://stackoverflow.com/questions/7963898/extracting-the-last-n-characters-from-a-string-in-r)
paste0(MoMoK_Nr, Nr_PK),
# otherwise leave old plot number
MoMoK_Nr)) %>%
select("MoMoK_Nr"                # "bund_nr"
,"Nr"                     # "lfd_nr"
, "TYP"                   #"typ"
, "Baumartengruppe"       # "baumgruppe"
, "Durchmesser..cm."      #     "durchmesser"
, "Hoehe.Laenge..dm."     # "laenge"
, "Zersetzungsgrad"       #"zersetzung"
) %>%
mutate(anzahl = -9) %>%
distinct() %>%
group_by(MoMoK_Nr) %>%
mutate(Nr = row_number())
colnames(be_totholz_liste_momok) <- c("bund_nr","lfd_nr","typ" ,"baumgruppe" ,"durchmesser" ,"laenge" ,"zersetzung",  "anzahl")
write.csv(be_totholz_liste_momok, paste0(input.path, "momok_be_totholz_liste.csv"), row.names = FALSE)
stop("this is where getting data frmdb of paper ends")
java -jar bfg-1.14.0.jar --help
py_install("lasio",pip=TRUE)
system2("pip install lasio")
