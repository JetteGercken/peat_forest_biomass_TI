# Thuenen Institute - Bodenschutz und Waldzustand
# Analysis of the forest inventory accompanying the  national soil inventory
# paper about biomass of alnus and betula at peatland sites
# Henriette Gercken

# goal of this script is to aquire data from the national soil invengotry database to then carryout the subsequent steps of the analysis 


# 0.1. packages and functions -------------------------------------------------------------------------------------------------
source(paste0(getwd(), "/scripts/01_00_functions_library.R"))


# 0.2 connect to database -------------------------------------------------
# name of database
# db <- 'bze2'  #provide the name of your db
# # host of database: thuenen server --> VPN proably need to be activated 
# host_db <- '134.110.100.88'   # i.e. 'ec2-54-83-201-96.compute-1.amazonaws.com'  
# # database port or any other port specified by the DBA
# db_port <- '5432'  # this info you can find in the PGadmin properties of the server
# # database username
# db_user <- 'hgercken'  # 'henriette.gercken@thuenen.de'  
# # database password
# db_password <-  'Ao1ieDahthaheoPh' # 'Jette$Thuenen_2024'

# 0.2.1. coencction details --------------------------------------------------
db_name <- "bze2"
db_server <- "134.110.100.88"
db_port <- "5432"
db_user <-  rstudioapi::askForPassword(prompt = "Please enter your username")
my_db_password <- rstudioapi::askForPassword(prompt = "Please enter your password")

# 0.2.2. enable connection ----------------------------------------------------------
con <- sqlconnection(db_name, db_server,db_port, db_user, my_db_password)

# 0.2.3. import dataset ----------------------------------------------------------------
# 0.2.3.1. soil data ------------------------------------------------------
# names of the tables we want to import to our raw data folder: 
soil_data_table_names <- c("vm_allgemeintab_2", "vm_minboden_profil_2", "vm_minboden_element_gehalte_2")
for (i in 1:length(data_table_names)) {
  # i = 1
  # get table name
  my.table.name <- data_table_names[i]
  # set schema name
  my.schema.name <- "bze2_extern"
  # set database name 
  db_name <- 'bze2'
  # set db connection
  con <- sqlconnection(db_name, db_server, db_port, db_user, my_db_password)
  # get table from database and transform into dataframe
  df <- dbGetQuery(con, paste0("SELECT * FROM"," ", my.schema.name,".", my.table.name))
  # name dataframe and export it to raw data folder
  write.csv(df, paste0(here("data/raw"), "/", my.table.name, ".csv"), row.names = FALSE)
}


# 0.2.3.2. forest data ------------------------------------------------------
# names of the tables we want to import to our raw data folder: 
forest_data_table_names <- c("tit", "be", "beab", "be_waldraender", "bej", "bejb", "be_totholz_punkt", "be_totholz_liste", "punkt", "HBI_location")
for (i in 1:length(forest_data_table_names)) {
  # i = 1
  # get table name
  my.table.name <- forest_data_table_names[i]
  # set schema name
  my.schema.name <- "data"
  # set database name 
  db_name <- 'bze3_altdaten'
  # set db connection
  con <- sqlconnection(db_name, db_server, db_port, db_user, my_db_password)
  # get table from database and transform into dataframe
  df <- dbGetQuery(con, paste0("SELECT * FROM"," ", my.schema.name,".", my.table.name))
  # name dataframe and export it to raw data folder
  write.csv(df, paste0(here("data/raw"), "/", my.table.name, ".csv"), row.names = FALSE)
}


# 0.2.3.3. code data ------------------------------------------------------
# names of the tables we want to import to our raw data folder: 
code_table_names <- c("x_ld", "k_tangenz", "x_bart")
for (i in 1:length(code_table_names)) {
  # i = 1
  # get table name
  my.table.name <- code_table_names[i]
  # set schema name
  my.schema.name <- "code"
  # set database name 
  db_name <- 'bze3_altdaten'
  # set db connection
  con <- sqlconnection(db_name, db_server, db_port, db_user, my_db_password)
  # get table from database and transform into dataframe
  df <- dbGetQuery(con, paste0("SELECT * FROM"," ", my.schema.name,".", my.table.name))
  # name dataframe and export it to raw data folder
  write.csv(df, paste0(here("data/raw"), "/", my.table.name, ".csv"), row.names = FALSE)
}

## copy soil data files from raw data general to input general fo
# copy everything imported from database from raw folder to input folder
# 1. create raw data path: 
raw.path.code <- paste0(here("data/raw"), "/")
# 2. get names of all files in the raw outout folder: https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/list.files
code.in.files <- list.files(raw.path.code) 
# 3. create input path
input.path.code <- paste0(here("data/input"), "/")
# copy the files from one raw filder to the input other: https://statisticsglobe.com/move-files-between-folders-r
file.copy(from = paste0(raw.path.code, code.in.files),
          to = paste0(input.path.code, code.in.files),
          overwrite = TRUE)




